var a=Object.defineProperty;var d=(l,t,e)=>t in l?a(l,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):l[t]=e;var s=(l,t,e)=>d(l,typeof t!="symbol"?t+"":t,e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))o(r);new MutationObserver(r=>{for(const i of r)if(i.type==="childList")for(const n of i.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&o(n)}).observe(document,{childList:!0,subtree:!0});function e(r){const i={};return r.integrity&&(i.integrity=r.integrity),r.referrerPolicy&&(i.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?i.credentials="include":r.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function o(r){if(r.ep)return;r.ep=!0;const i=e(r);fetch(r.href,i)}})();class c{static validateSize(t,e){return t.size<=e}}class h{constructor({progressWrapper:t,progressFill:e,progressText:o,overlay:r,resetFunction:i}){s(this,"progressWrapper");s(this,"progressFill");s(this,"progressPercent");s(this,"overlay");s(this,"resetFunction");s(this,"interval");s(this,"currentPercent");this.progressWrapper=t,this.progressFill=e,this.progressPercent=o,this.overlay=r,this.resetFunction=i,this.interval=null,this.currentPercent=0}start(){this.progressWrapper.style.display="flex",this.progressFill.style.width="0%",this.progressPercent.textContent="0%",this.overlay.style.display="flex";const t=5e3,e=100,o=t/e,r=90,i=r/o;this.interval=setInterval(()=>{this.currentPercent<r&&(this.currentPercent+=i,this.updateProgress(this.currentPercent))},e)}updateProgress(t){const e=Math.round(t);this.progressFill.style.width=`${e}%`,this.progressPercent.textContent=`${e}%`}finish(t){clearInterval(this.interval),this.updateProgress(100),this.overlay.style.display="none",setTimeout(()=>{t.status===200?alert("Файл успешно загружен."):alert(`Ошибка загрузки: ${t.status} - ${t.statusText}`),this.progressWrapper.style.display="none",this.progressFill.style.width="0%",this.progressPercent.textContent="0%",this.resetFunction()},1e3)}error(){clearInterval(this.interval),this.progressPercent.textContent="Ошибка",this.progressFill.style.background="red",this.overlay.style.display="none",this.progressFill.style.width="0%",this.progressPercent.textContent="0%"}}class p{constructor(t,e,o,r){s(this,"file");s(this,"filename");s(this,"url");s(this,"handleProgressBar");this.file=t,this.filename=e,this.url=o,this.handleProgressBar=new h(r)}upload(){const t=new FormData;t.append("file",this.file),t.append("name",this.filename);const e=new XMLHttpRequest;e.open("POST",this.url),this.handleProgressBar.start(),e.onerror=()=>{alert("Ошибка сети при загрузке файла."),this.handleProgressBar.error()},e.send(t),e.onload=()=>{this.handleProgressBar.finish(e)}}}class u extends HTMLElement{constructor(){super();s(this,"isFileSelected",!1);s(this,"isInputFilled",!1);s(this,"selectedFile",null);s(this,"FILE_MAX_SIZE",1024);s(this,"url","https://file-upload-server-mc26.onrender.com/api/v1/upload");s(this,"dropArea");s(this,"fileInput");s(this,"filenameInput");s(this,"clearFilenameButton");s(this,"submitButton");s(this,"progressFill");s(this,"progressPercent");s(this,"progressFilename");s(this,"progressWrapper");s(this,"clearFileButton");s(this,"overlay");this.attachShadow({mode:"open"})}connectedCallback(){this.render(),this.initElements(),this.addEventListeners()}render(){this.shadowRoot.innerHTML=`
          <link rel="stylesheet" href='./src/styles/index.css'/>
  
          <div class="loader-form-wrapper">
            <div class="loader-form">
            <button class="loader-form__close-button">
              <div class="cross"></div>
            </button>
            <h1 class="loader-form__title">Загрузочное окно</h1>
            <p class='loader-form__subtitle'>Перед загрузкой дайте имя файлу</p>
            <div class='loader-form__filename-wrapper'>
              <input
                placeholder="Название файла"
                class="loader-form__filename-input"
                type="text"
                name="name"
                id="name"
                required
            />
            <div class='loader-form__filename-clear-button cross_input'></div>
            </div>
            <div class="loader-form__drop-area">
              <img src="./drop-area.svg" />
              <p class="loader-form__drop-area-text">Перенесите ваш файл в область ниже</p>
              <input type="file" class="loader-form__input" accept=".txt,.json,.csv," hidden />
            </div>
            <div class="loader-form__progress-wrapper">
              <div class="loader-form__progress-icon"></div>
              <div class="loader-form__progress-bar-section">
                <div class="loader-form__progress-filename">file</div>
                <div class="loader-form__progress-percent">0%</div>
                <div class="loader-form__progress-bar"></div>
                <div class="loader-form__progress-fill"></div>      
              </div>
              <div class="loader-form__clear-file-button cross_input top-alt color-accent"></div>
            </div>
          <button class="loader-form__submit-button loader-form__submit-button--inactive" disabled>Загрузить</button>
          </div>
          <div class="overlay"></div>
          </div>
        `}initElements(){this.dropArea=this.shadowRoot.querySelector(".loader-form__drop-area"),this.fileInput=this.shadowRoot.querySelector(".loader-form__input"),this.filenameInput=this.shadowRoot.querySelector(".loader-form__filename-input"),this.clearFilenameButton=this.shadowRoot.querySelector(".loader-form__filename-clear-button"),this.submitButton=this.shadowRoot.querySelector(".loader-form__submit-button"),this.progressFill=this.shadowRoot.querySelector(".loader-form__progress-fill"),this.progressPercent=this.shadowRoot.querySelector(".loader-form__progress-percent"),this.progressFilename=this.shadowRoot.querySelector(".loader-form__progress-filename"),this.progressWrapper=this.shadowRoot.querySelector(".loader-form__progress-wrapper"),this.clearFileButton=this.shadowRoot.querySelector(".loader-form__clear-file-button"),this.overlay=this.shadowRoot.querySelector(".overlay")}addEventListeners(){this.dropArea.addEventListener("dragover",e=>{e.preventDefault()}),this.dropArea.addEventListener("drop",e=>{e.preventDefault(),this.handleFilePick(e)}),this.fileInput.addEventListener("change",e=>{this.handleFilePick(e)}),this.filenameInput.addEventListener("input",()=>{this.isInputFilled=this.filenameInput.value.length>0,this.setButtonActive()}),this.clearFilenameButton.addEventListener("click",()=>{this.filenameInput.value="",this.isInputFilled=!1,this.showFileIcon(this.isInputFilled)}),this.dropArea.addEventListener("click",()=>{this.fileInput.click()}),this.clearFileButton.addEventListener("click",()=>{this.selectedFile=null,this.resetForm()}),this.submitButton.addEventListener("click",()=>{const e={progressWrapper:this.progressWrapper,progressFill:this.progressFill,progressText:this.progressPercent,overlay:this.overlay,resetFunction:this.resetForm.bind(this)};this.selectedFile&&new p(this.selectedFile,this.filenameInput.value,this.url,e).upload()})}handleFilePick(e){var r,i,n;let o=null;if(e instanceof DragEvent&&((i=(r=e.dataTransfer)==null?void 0:r.files)!=null&&i.length)?o=e.dataTransfer.files[0]:e.target instanceof HTMLInputElement&&((n=e.target.files)!=null&&n.length)&&(o=e.target.files[0]),!!o){if(!c.validateSize(o,this.FILE_MAX_SIZE)){alert("Размер файла не должен превышать 1024 байта");return}this.selectedFile=o,this.isFileSelected=!0,this.setButtonActive()}}setButtonActive(){const e=this.isInputFilled&&this.isFileSelected;this.submitButton.disabled=!e,this.toggleButtonStyle(e),this.showFileIcon(e)}toggleButtonStyle(e){e?(this.submitButton.classList.remove("loader-form__submit-button--inactive"),this.submitButton.classList.add("loader-form__submit-button--active")):(this.submitButton.classList.remove("loader-form__submit-button--active"),this.submitButton.classList.add("loader-form__submit-button--inactive"))}showFileIcon(e){if(e){this.progressWrapper.style.display="flex";const o=this.selectedFile?"."+this.selectedFile.name.split(".").pop():"";this.progressFilename.textContent=this.filenameInput.value+o}else this.progressFilename.textContent="",this.progressWrapper.style.display="none"}resetForm(){this.filenameInput.value="",this.isInputFilled=!1,this.isFileSelected=!1,this.selectedFile=null,this.setButtonActive()}}customElements.define("loader-form",u);
